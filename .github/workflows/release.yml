name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build_release:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'

      - name: Install dependencies packages for linux
        if: runner.os == 'Linux'
        run: sudo apt install ocl-icd-opencl-dev opencl-headers

      - name: Build
        run: |
          go build -v .
          echo "archive_name=xMiner-${{ runner.os }}-${{ runner.arch }}-${{ github.ref_name }}.tar.gz" >> "$GITHUB_ENV"


      - name: Prepare files (Linux/Macos)
        if: runner.os != 'Windows'
        run: |
          echo "archive_type=tar" >> "$GITHUB_ENV"
          mkdir "xMiner-${{ github.ref_name}}" && cd "xMiner-${{ github.ref_name }}"
          mv ../xMiner ./
          echo -e '#!/bin/sh\n./xMiner -pool=ws://127.0.0.1:8546' > solo_mining.sh
          chmod +x solo_mining.sh
          echo -e '#!/bin/sh\n./xMiner -user=username -pass=password -pool=wss://pool-address.com:port' > pool_mining.sh
          chmod +x pool_mining.sh
          echo -e '#!/bin/sh\n./xMiner -info -all' > opencl_info.sh
          chmod +x opencl_info.sh
          echo -e '#!/bin/sh\n./xMiner -mock -all' > benchmark.sh
          chmod +x benchmark.sh

      - name: Prepare files (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "archive_type=zip" >> "$GITHUB_ENV"
          mkdir xMiner-${{ github.ref_name}} && cd xMiner-${{ github.ref_name}}
          mv ../xMiner.exe ./
          echo -e 'xMiner.exe -pool=ws://127.0.0.1:8546\r\npause' > solo_mining.bat
          chmod +x solo_mining.bat
          echo -e 'xMiner.exe -user=username -pass=password -pool=wss://pool-address.com:port\r\npause' > pool_mining.bat
          chmod +x pool_mining.bat
          echo -e 'xMiner.exe -info -all\r\npause' > opencl_info.bat
          chmod +x opencl_info.bat
          echo -e 'xMiner.exe -mock -all\r\npause' > benchmark.bat
          chmod +x benchmark.bat

      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.6
        with:
          type: ${{ archive_type }}
          filename: ${{ archive_name }}
          path: 'xMiner-${{ github.ref_name}}'

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files : ${{ archive_name }}

